// Code generated by MockGen. DO NOT EDIT.
// Source: ./common/healthcheck/health_checker.go

// Package mock_healthcheck is a generated GoMock package.
package mock_healthcheck

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockCheckHealth is a mock of CheckHealth interface.
type MockCheckHealth struct {
	ctrl     *gomock.Controller
	recorder *MockCheckHealthMockRecorder
}

// MockCheckHealthMockRecorder is the mock recorder for MockCheckHealth.
type MockCheckHealthMockRecorder struct {
	mock *MockCheckHealth
}

// NewMockCheckHealth creates a new mock instance.
func NewMockCheckHealth(ctrl *gomock.Controller) *MockCheckHealth {
	mock := &MockCheckHealth{ctrl: ctrl}
	mock.recorder = &MockCheckHealthMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockCheckHealth) EXPECT() *MockCheckHealthMockRecorder {
	return m.recorder
}

// Check mocks base method.
func (m *MockCheckHealth) Check(ctx context.Context) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Check", ctx)
	ret0, _ := ret[0].(error)
	return ret0
}

// Check indicates an expected call of Check.
func (mr *MockCheckHealthMockRecorder) Check(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Check", reflect.TypeOf((*MockCheckHealth)(nil).Check), ctx)
}
